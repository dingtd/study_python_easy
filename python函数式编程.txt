python 函数式编程和面向对象编程

函数式编程
function 函数
functional  函数式，编程范式，抽象计算机的编程模式
函数！=函数式 

高阶函数：
能接收函数做参数的函数
1.变量可以指向函数
2.函数的参数可以接收变量
3.一个函数可以接收另一个函数作为参数

高阶函数：
1.map()

map(func,*iterables) --->map object  返回iterator

2.reduce()

from functools import reduce
reduce(function,sequence[,initial]) 
function作用在序列上，两两进行累函数操作

3.filter()
filter(function or None,iterable) ---->filter object 

4.sort()排序
sorted(iterable,key=None,reverse=False)
用key指定的函数作用于iterable中的每一个元素，按reverse排序 默认升序



闭包：
内函数引用外函数变量返回内函数，称为闭包

注意：外函数的引用变量，变量固定后函数引用也固定

匿名函数：
lambda

map(lambda x:x*x,[i for i in range(10) ])
关键字：lambda 函数参数:表达式


装饰器：
decoretor

本质是一个高阶函数，接受一个函数作为参数，返回一个新的函数

模块：
导入模块
import math

from math import pow,sin,log

from logging import log as logger  给函数起个别名避免冲突

通过 try...except... 异常处理导入模块

--------------------------------------------------------
面向对象编程：
定义类并创建实例：

class Person(object):
	pass
	
object 表示从哪个类继承下来

创建实例：
xiaoming=Person()

python为动态语言，对于每个实例，都可以直接添加属性赋值

初始化实例属性：
__init__（self,name）:
self.name=name

定义类方法 
	count=0
@classmethod
def how_many(cls):
	return cls.count
	
	
访问限制：：
以双下划綫开头的函数外部无法访问 __


类的继承：
继承一个类

继承类并修改方法使用：
super(子类,self).__init__(父类变量)  初始化父类


判断类型
函数isinstance()可以判断一个变量的类型
isinstance(p, Person)

获取对象信息；
除了用isinstance()判断它是否是某种类型的实例外，type() 函数获取变量的类型，
它返回一个 Type 对象。可以用dir()函数获取变量的所有属性： dir(s)。


































































































































